/**
 * Script pour appliquer les r√®gles Firebase et tester les scans QR
 * Usage: node apply-firebase-rules.js
 */

const TEST_DOCUMENT_ID = "itzoacB5xwRFvGR3Az2u";
const BASE_URL = "http://localhost:3000";

console.log('üîß Application des r√®gles Firebase pour les scans QR\n');

console.log('üìã R√àGLES FIREBASE √Ä APPLIQUER:');
console.log('=====================================');
console.log(`
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // R√®gles pour les documents
    match /documents/{documentId} {
      allow read, write: if true;
    }
    
    // R√®gles pour les scans QR
    match /qrScans/{scanId} {
      allow read, write: if true;
    }
    
    // R√®gles pour les t√©l√©chargements
    match /downloads/{downloadId} {
      allow read, write: if true;
    }
    
    // R√®gles pour les utilisateurs
    match /users/{userId} {
      allow read, write: if true;
    }
    
    // R√®gles pour les commandes
    match /orders/{orderId} {
      allow read, write: if true;
    }
    
    // R√®gles pour les cartes de visite
    match /businessCards/{cardId} {
      allow read, write: if true;
    }
  }
}
`);
console.log('=====================================\n');

console.log('üìù INSTRUCTIONS D√âTAILL√âES:');
console.log('1. üåê Ouvrez https://console.firebase.google.com/');
console.log('2. üéØ S√©lectionnez le projet: studio-6374747103-d0730');
console.log('3. üìä Allez dans "Firestore Database" > "R√®gles"');
console.log('4. üìù Remplacez TOUTES les r√®gles existantes par celles ci-dessus');
console.log('5. ‚úÖ Cliquez sur "Publier"');
console.log('6. ‚è≥ Attendez 1-2 minutes que les r√®gles se propagent\n');

async function testAfterRules() {
  console.log('üß™ Test apr√®s application des r√®gles...\n');
  
  try {
    // Test de scan QR
    console.log('üî≤ Test de scan QR...');
    const scanResponse = await fetch(`${BASE_URL}/api/document-stats/${TEST_DOCUMENT_ID}/scan`, {
      method: 'GET',
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
        'X-Forwarded-For': '192.168.1.100'
      },
      redirect: 'manual'
    });
    
    console.log(`üìä Status: ${scanResponse.status}`);
    
    if (scanResponse.status === 307) {
      console.log('‚úÖ Scan QR r√©ussi - Redirection d√©tect√©e');
      const location = scanResponse.headers.get('location');
      console.log(`üîó Redirection vers: ${location}`);
    } else if (scanResponse.status === 200) {
      console.log('‚úÖ Scan QR r√©ussi');
    } else {
      console.log('‚ùå Erreur lors du scan QR');
      const errorText = await scanResponse.text();
      console.log(`üìÑ R√©ponse: ${errorText}`);
    }
    
    // Attendre et v√©rifier les statistiques
    console.log('\n‚è≥ Attente de la mise √† jour (5 secondes)...');
    await new Promise(resolve => setTimeout(resolve, 5000));
    
    console.log('üìä V√©rification des statistiques...');
    const statsResponse = await fetch(`${BASE_URL}/api/document-stats/${TEST_DOCUMENT_ID}?email=daroul.itqaane.1@gmail.com`);
    
    if (statsResponse.ok) {
      const stats = await statsResponse.json();
      console.log(`üìä T√©l√©chargements: ${stats.downloadCount}`);
      console.log(`üìä Scans QR: ${stats.qrScanCount}`);
      console.log(`üìä Nombre de scans dans l'historique: ${stats.qrScans?.length || 0}`);
      
      if (stats.qrScans && stats.qrScans.length > 0) {
        console.log('\nüî≤ Derniers scans QR:');
        stats.qrScans.slice(0, 3).forEach((scan, index) => {
          let dateStr = 'Date inconnue';
          try {
            if (scan.timestamp?.toDate) {
              dateStr = scan.timestamp.toDate().toLocaleString('fr-FR');
            } else if (scan.timestamp?.seconds) {
              dateStr = new Date(scan.timestamp.seconds * 1000).toLocaleString('fr-FR');
            } else if (scan.timestamp) {
              dateStr = new Date(scan.timestamp).toLocaleString('fr-FR');
            }
          } catch (error) {
            console.log('Erreur formatage date:', error);
          }
          console.log(`   ${index + 1}. ${dateStr} - ${scan.userAgent?.split(' ')[0] || 'Inconnu'}`);
        });
        console.log('\nüéâ SUCC√àS ! Les scans QR fonctionnent maintenant !');
      } else {
        console.log('\n‚ö†Ô∏è  L\'historique des scans QR est encore vide');
        console.log('üîß V√©rifiez que les r√®gles Firebase ont √©t√© appliqu√©es correctement');
      }
    } else {
      console.log('‚ùå Impossible de r√©cup√©rer les statistiques');
    }
    
  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error.message);
  }
}

async function main() {
  console.log('üéØ √âTAPES IMPORTANTES:');
  console.log('1. Appliquez les r√®gles Firebase ci-dessus');
  console.log('2. Attendez 1-2 minutes');
  console.log('3. Relancez ce script pour tester');
  console.log('4. Les scans QR devraient fonctionner et l\'historique se remplir\n');
  
  // Test imm√©diat pour voir l'√©tat actuel
  await testAfterRules();
  
  console.log('\nüìû Si le probl√®me persiste:');
  console.log('- V√©rifiez que les r√®gles Firebase sont exactement comme ci-dessus');
  console.log('- Assurez-vous que le projet Firebase est correct: studio-6374747103-d0730');
  console.log('- V√©rifiez que les r√®gles ont √©t√© publi√©es (bouton "Publier")');
}

main().catch(console.error);
